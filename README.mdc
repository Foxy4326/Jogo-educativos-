<!DOCTYPE html>
<html lang="pt-BR">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Jogos Educativos - Plataforma Completa</title>
    <style>
        /* ==========================================================
           ESTILOS CSS (DO SEU CÓDIGO ORIGINAL)
           ========================================================== */
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            box-sizing: border-box;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100%;
            color: #333;
        }

        html, body {
            height: 100%;
        }

        .container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 20px;
        }

        /* Sistema de Login */
        .login-section {
            position: fixed;
            top: 20px;
            right: 20px;
            z-index: 1000;
        }

        .login-btn {
            background: linear-gradient(135deg, #4facfe, #00f2fe);
            color: white;
            border: none;
            padding: 12px 25px;
            border-radius: 25px;
            font-weight: bold;
            cursor: pointer;
            transition: all 0.3s ease;
            box-shadow: 0 5px 15px rgba(79, 172, 254, 0.3);
        }

        .login-btn:hover {
            transform: scale(1.05);
        }

        .user-info {
            display: none;
            background: rgba(255, 255, 255, 0.95);
            padding: 15px 20px;
            border-radius: 20px;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
        }

        .user-name {
            font-weight: bold;
            color: #4a5568;
            margin-bottom: 10px;
        }

        .logout-btn {
            background: linear-gradient(135deg, #ff6b6b, #ee5a24);
            color: white;
            border: none;
            padding: 8px 15px;
            border-radius: 15px;
            cursor: pointer;
        }

        /* Modal de Login */
        .login-modal {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0.8);
            z-index: 2000;
            justify-content: center;
            align-items: center;
        }

        .login-content {
            background: white;
            border-radius: 25px;
            padding: 40px;
            max-width: 450px;
            width: 90%;
            box-shadow: 0 25px 50px rgba(0, 0, 0, 0.3);
            position: relative;
        }

        .login-close {
            position: absolute;
            top: 15px;
            right: 20px;
            background: none;
            border: none;
            font-size: 1.5rem;
            cursor: pointer;
            color: #666;
        }

        .login-title {
            text-align: center;
            font-size: 2rem;
            margin-bottom: 30px;
            background: linear-gradient(135deg, #667eea, #764ba2);
            background-clip: text;
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
        }

        .form-group {
            margin-bottom: 20px;
        }

        .form-label {
            display: block;
            margin-bottom: 8px;
            font-weight: bold;
            color: #4a5568;
        }

        .form-input {
            width: 100%;
            padding: 15px;
            border: 2px solid #e2e8f0;
            border-radius: 10px;
            font-size: 1rem;
            transition: all 0.3s ease;
        }

        .form-input:focus {
            border-color: #4facfe;
            outline: none;
            box-shadow: 0 0 10px rgba(79, 172, 254, 0.2);
        }

        .form-btn {
            width: 100%;
            padding: 15px;
            border: none;
            border-radius: 10px;
            font-size: 1.1rem;
            font-weight: bold;
            cursor: pointer;
            background: linear-gradient(135deg, #48bb78, #38a169);
            color: white;
            margin-bottom: 15px;
        }

        .demo-btn {
            width: 100%;
            padding: 10px;
            margin-bottom: 8px;
            border: 2px solid #e2e8f0;
            border-radius: 8px;
            background: white;
            cursor: pointer;
            transition: all 0.3s ease;
        }

        .demo-btn:hover {
            border-color: #4facfe;
            background: #f7fafc;
        }

        /* Header */
        header {
            text-align: center;
            margin-bottom: 40px;
            background: rgba(255, 255, 255, 0.95);
            padding: 50px;
            border-radius: 30px;
            box-shadow: 0 25px 50px rgba(0, 0, 0, 0.15);
        }

        h1 {
            font-size: 4rem;
            background: linear-gradient(135deg, #667eea, #764ba2);
            background-clip: text;
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            margin-bottom: 20px;
        }

        .subtitle {
            font-size: 1.4rem;
            color: #4a5568;
            margin-bottom: 30px;
            font-weight: 600;
        }

        .version-badge {
            display: inline-block;
            background: linear-gradient(135deg, #ff6b6b, #ee5a24);
            color: white;
            padding: 8px 16px;
            border-radius: 20px;
            font-size: 0.9rem;
            font-weight: bold;
            margin-top: 15px;
        }

        /* Sistema de Saudações */
        .greeting-system {
            background: linear-gradient(135deg, #ffd700, #ffed4e);
            color: #333;
            padding: 15px 25px;
            border-radius: 20px;
            margin-bottom: 20px;
            text-align: center;
            font-weight: bold;
            font-size: 1.2rem;
            box-shadow: 0 10px 30px rgba(255, 215, 0, 0.3);
            transition: all 0.5s ease;
        }

        .greeting-time {
            margin-left: 15px;
            font-size: 1rem;
            opacity: 0.8;
        }

        /* Sistema de Pontuação */
        .score-system {
            background: linear-gradient(135deg, #667eea, #764ba2);
            color: white;
            padding: 20px;
            border-radius: 20px;
            margin-bottom: 30px;
            text-align: center;
            box-shadow: 0 10px 30px rgba(102, 126, 234, 0.3);
            display: none;
        }

        .score-title {
            font-size: 1.2rem;
            font-weight: bold;
            margin-bottom: 15px;
        }

        .score-stats {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(120px, 1fr));
            gap: 15px;
        }

        .score-stat {
            background: rgba(255, 255, 255, 0.2);
            padding: 15px;
            border-radius: 15px;
        }

        .score-number {
            font-size: 2rem;
            font-weight: bold;
            margin-bottom: 5px;
        }

        .score-label {
            font-size: 0.9rem;
            opacity: 0.9;
        }

        /* Sistema de Moedas */
        .currency-display {
            position: fixed;
            top: 20px;
            left: 20px;
            background: linear-gradient(135deg, #ffd700, #ffed4e);
            color: #333;
            padding: 15px 20px;
            border-radius: 25px;
            font-weight: bold;
            font-size: 1.1rem;
            box-shadow: 0 10px 30px rgba(255, 215, 0, 0.3);
            z-index: 1000;
            display: none;
        }

        /* Grid de jogos */
        .games-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));
            gap: 30px;
            margin-bottom: 50px;
        }

        .game-card {
            background: rgba(255, 255, 255, 0.95);
            border-radius: 25px;
            padding: 30px;
            box-shadow: 0 15px 35px rgba(0, 0, 0, 0.1);
            transition: all 0.3s ease;
            cursor: pointer;
        }

        .game-card:hover {
            transform: translateY(-10px);
            box-shadow: 0 25px 50px rgba(0, 0, 0, 0.2);
        }

        .game-icon {
            font-size: 4rem;
            text-align: center;
            margin-bottom: 20px;
        }

        .game-title {
            font-size: 1.5rem;
            font-weight: bold;
            color: #2d3748;
            margin-bottom: 15px;
            text-align: center;
        }

        .game-description {
            color: #4a5568;
            text-align: center;
            margin-bottom: 20px;
            line-height: 1.6;
        }

        .score-display {
            background: linear-gradient(135deg, #667eea, #764ba2);
            color: white;
            padding: 10px 15px;
            border-radius: 20px;
            font-size: 0.9rem;
            margin-bottom: 20px;
            text-align: center;
            font-weight: bold;
        }

        .play-button {
            background: linear-gradient(135deg, #4facfe, #00f2fe);
            color: white;
            border: none;
            padding: 15px 30px;
            border-radius: 25px;
            font-size: 1.1rem;
            font-weight: bold;
            cursor: pointer;
            width: 100%;
            transition: all 0.3s ease;
        }

        .play-button:hover {
            transform: scale(1.05);
        }

        /* Modais dos Jogos */
        .game-modal {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0.8);
            z-index: 2000;
            justify-content: center;
            align-items: center;
        }

        .modal-content {
            background: white;
            border-radius: 25px;
            padding: 40px;
            max-width: 700px;
            width: 90%;
            max-height: 85vh;
            overflow-y: auto;
            position: relative;
            box-shadow: 0 25px 50px rgba(0, 0, 0, 0.3);
        }

        .close-button {
            position: absolute;
            top: 20px;
            right: 25px;
            background: linear-gradient(135deg, #ff6b6b, #ee5a24);
            color: white;
            border: none;
            border-radius: 50%;
            width: 40px;
            height: 40px;
            font-size: 1.3rem;
            cursor: pointer;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .game-interface {
            background: rgba(255, 255, 255, 0.95);
            border-radius: 20px;
            padding: 30px;
            margin-bottom: 20px;
        }

        .game-stats {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(100px, 1fr));
            gap: 15px;
            margin-bottom: 25px;
        }

        .stat-item {
            background: linear-gradient(135deg, #4facfe, #00f2fe);
            color: white;
            padding: 15px;
            border-radius: 15px;
            text-align: center;
            font-weight: bold;
        }

        .question-area {
            background: linear-gradient(135deg, #f7fafc, #edf2f7);
            padding: 30px;
            border-radius: 20px;
            margin-bottom: 25px;
            text-align: center;
            font-size: 1.5rem;
            font-weight: bold;
            color: #2d3748;
            min-height: 120px;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .answer-input {
            width: 100%;
            padding: 20px;
            border: 3px solid #e2e8f0;
            border-radius: 15px;
            font-size: 1.3rem;
            text-align: center;
            margin-bottom: 20px;
        }

        .answer-input:focus {
            border-color: #4facfe;
            outline: none;
        }

        .control-btn {
            background: linear-gradient(135deg, #48bb78, #38a169);
            color: white;
            border: none;
            padding: 15px 25px;
            border-radius: 15px;
            font-weight: bold;
            cursor: pointer;
            transition: all 0.3s ease;
            margin: 5px;
        }

        .control-btn:hover {
            transform: scale(1.05);
        }

        .control-btn.secondary {
            background: linear-gradient(135deg, #4facfe, #00f2fe);
        }

        /* Notificações */
        .notification {
            position: fixed;
            top: 20px;
            right: 20px;
            padding: 15px 20px;
            border-radius: 15px;
            color: white;
            font-weight: bold;
            z-index: 3000;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.3);
            transform: translateX(400px);
            transition: all 0.3s ease;
        }

        .notification.show {
            transform: translateX(0);
        }

        .notification.success {
            background: linear-gradient(135deg, #48bb78, #38a169);
        }

        .notification.error {
            background: linear-gradient(135deg, #e53e3e, #c53030);
        }

        /* Estilos do Plano (Apenas o Badge) */
        .plan-badge.basic {
            background: linear-gradient(135deg, #718096, #4a5568);
            color: white;
        }

        .plan-badge.premium {
            background: linear-gradient(135deg, #9f7aea, #805ad5);
            color: white;
        }

        .plan-badge.ultra {
            background: linear-gradient(135deg, #ffd700, #ff8c00);
            color: #333;
        }

        /* Responsividade */
        @media (max-width: 768px) {
            h1 {
                font-size: 2.5rem;
            }
            
            .games-grid {
                grid-template-columns: 1fr;
            }

            .modal-content {
                padding: 20px;
                margin: 10px;
            }

            .greeting-system {
                font-size: 1rem;
                padding: 12px 20px;
            }

            .greeting-time {
                margin-left: 10px;
                font-size: 0.9rem;
            }

            .plan-card.premium {
                transform: none;
            }
        }
    </style>
</head>
<body>
    <div id="currency-display" class="currency-display">
        💰 <span id="user-coins">0</span> Moedas
    </div>

    <div id="plan-badge" class="plan-badge basic" style="position: fixed; top: 80px; left: 20px; padding: 8px 15px; border-radius: 20px; font-weight: bold; font-size: 0.9rem; z-index: 1000; display: none; box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);">
        <span id="plan-name">📦 Plano Básico</span>
    </div>

    <button id="shop-btn" class="shop-btn" onclick="abrirLoja()" style="position: fixed; bottom: 20px; right: 20px; background: linear-gradient(135deg, #ff6b6b, #ee5a24); color: white; border: none; padding: 15px 20px; border-radius: 25px; font-weight: bold; cursor: pointer; font-size: 1.1rem; box-shadow: 0 10px 30px rgba(255, 107, 107, 0.3); z-index: 1000; display: none; transition: all 0.3s ease;">
        🛒 Loja
    </button>

    <button id="plans-btn" class="plans-btn" onclick="abrirPlanos()" style="position: fixed; bottom: 80px; right: 20px; background: linear-gradient(135deg, #9f7aea, #805ad5); color: white; border: none; padding: 15px 20px; border-radius: 25px; font-weight: bold; cursor: pointer; font-size: 1.1rem; box-shadow: 0 10px 30px rgba(159, 122, 234, 0.3); z-index: 1000; display: none; transition: all 0.3s ease;">
        ⭐ Planos
    </button>

    <div class="login-section">
        <div id="login-section">
            <button class="login-btn" onclick="mostrarLogin()">🔐 Fazer Login</button>
        </div>
        <div id="user-section" class="user-info">
            <div class="user-name">👋 Olá, <span id="user-name"></span>!</div>
            <div id="user-badges" style="margin: 8px 0; font-size: 0.85rem;"></div>
            <button class="logout-btn" onclick="logout()">🚪 Sair</button>
        </div>
    </div>

    <div id="login-modal" class="login-modal">
        <div class="login-content">
            <button class="login-close" onclick="fecharLogin()">&times;</button>
            <h2 class="login-title">🎮 Acesso à Plataforma</h2>
            
            <div id="login-form">
                <div class="form-group">
                    <label class="form-label" for="login-usuario">👤 Usuário</label>
                    <input type="text" id="login-usuario" class="form-input" placeholder="Digite seu usuário" value="teste"> </div>
                <div class="form-group">
                    <label class="form-label" for="login-senha">🔒 Senha</label>
                    <input type="password" id="login-senha" class="form-input" placeholder="Digite sua senha" value="123"> </div>
                <button class="form-btn" onclick="fazerLogin()">🚀 Entrar</button>
                
                <div style="text-align: center; margin-top: 20px;">
                    <p style="color: #666; margin-bottom: 10px;">Não tem conta ainda?</p>
                    <button class="demo-btn" onclick="mostrarCadastro()">
                        ✨ Criar Nova Conta
                    </button>
                </div>
            </div>

            <div id="cadastro-form" style="display: none;">
                <div class="form-group">
                    <label class="form-label" for="cadastro-usuario">👤 Escolha um usuário</label>
                    <input type="text" id="cadastro-usuario" class="form-input" placeholder="Digite um nome de usuário">
                </div>
                <div class="form-group">
                    <label class="form-label" for="cadastro-email">📧 Email</label>
                    <input type="email" id="cadastro-email" class="form-input" placeholder="Digite seu email">
                </div>
                <div class="form-group">
                    <label class="form-label" for="cadastro-senha">🔒 Crie uma senha</label>
                    <input type="password" id="cadastro-senha" class="form-input" placeholder="Digite uma senha">
                </div>
                <div class="form-group">
                    <label class="form-label" for="cadastro-confirma">🔒 Confirme a senha</label>
                    <input type="password" id="cadastro-confirma" class="form-input" placeholder="Digite a senha novamente">
                </div>
                <button class="form-btn" onclick="fazerCadastro()">🎉 Criar Conta</button>
                
                <div style="text-align: center; margin-top: 20px;">
                    <p style="color: #666; margin-bottom: 10px;">Já tem conta?</p>
                    <button class="demo-btn" onclick="mostrarLoginForm()">
                        🔑 Fazer Login
                    </button>
                </div>
            </div>
        </div>
    </div>

    <div class="container">
        <header>
            <div id="greeting-system" class="greeting-system">
                <span id="greeting-icon">🌅</span>
                <span id="greeting-text">Bom dia!</span>
                <span id="current-time" class="greeting-time">00:00:00</span>
            </div>
            <h1>🎮 Jogos Educativos</h1>
            <p class="subtitle">Plataforma educativa interativa completa!</p>
            <div style="font-size: 2.5rem; margin-top: 20px;">🌟📚🎯🧠✨🚀🏆</div>
            <div class="version-badge">VERSÃO COMPLETA - 100% FUNCIONAL!</div>
        </header>

        <div id="score-system" class="score-system">
            <div class="score-title">📊 Seu Progresso Global</div>
            <div class="score-stats">
                <div class="score-stat">
                    <div class="score-number" id="total-points">0</div>
                    <div class="score-label">Pontos Totais</div>
                </div>
                <div class="score-stat">
                    <div class="score-number" id="games-played">0</div>
                    <div class="score-label">Jogos Jogados</div>
                </div>
                <div class="score-stat">
                    <div class="score-number" id="achievements">0</div>
                    <div class="score-label">Conquistas</div>
                </div>
                <div class="score-stat">
                    <div class="score-number" id="streak">0</div>
                    <div class="score-label">Sequência</div>
                </div>
                <div class="score-stat">
                    <div class="score-number" id="total-coins">0</div>
                    <div class="score-label">💰 Moedas</div>
                </div>
            </div>
        </div>

        <div class="games-grid">
            <div class="game-card">
                <div class="game-icon">🔢</div>
                <h3 class="game-title">Desafio Matemático</h3>
                <p class="game-description">Resolva operações matemáticas contra o tempo!</p>
                <div class="score-display">⭐ Melhor: <span id="math-best">0</span> pontos</div>
                <button class="play-button" onclick="abrirJogo('math')">🚀 Jogar Agora</button>
            </div>

            <div class="game-card">
                <div class="game-icon">📚</div>
                <h3 class="game-title">Quiz de Português</h3>
                <p class="game-description">Teste seus conhecimentos de gramática e literatura!</p>
                <div class="score-display">⭐ Melhor: <span id="portuguese-best">0</span> pontos</div>
                <button class="play-button" onclick="abrirJogo('portuguese')">🚀 Jogar Agora</button>
            </div>

            <div class="game-card">
                <div class="game-icon">🌍</div>
                <h3 class="game-title">Quiz de Geografia</h3>
                <p class="game-description">Explore o mundo através de perguntas!</p>
                <div class="score-display">⭐ Melhor: <span id="geography-best">0</span> pontos</div>
                <button class="play-button" onclick="abrirJogo('geography')">🚀 Jogar Agora</button>
            </div>

            <div class="game-card">
                <div class="game-icon">🏛️</div>
                <h3 class="game-title">Quiz de História</h3>
                <p class="game-description">Viaje no tempo e teste seus conhecimentos!</p>
                <div class="score-display">⭐ Melhor: <span id="history-best">0</span> pontos</div>
                <button class="play-button" onclick="abrirJogo('history')">🚀 Jogar Agora</button>
            </div>

            <div class="game-card">
                <div class="game-icon">🔬</div>
                <h3 class="game-title">Quiz de Ciências</h3>
                <p class="game-description">Explore o mundo da ciência e natureza!</p>
                <div class="score-display">⭐ Melhor: <span id="science-best">0</span> pontos</div>
                <button class="play-button" onclick="abrirJogo('science')">🚀 Jogar Agora</button>
            </div>

            <div class="game-card">
                <div class="game-icon">🧠</div>
                <h3 class="game-title">Jogo da Memória</h3>
                <p class="game-description">Teste sua memória com cartas coloridas!</p>
                <div class="score-display">⭐ Melhor: <span id="memory-best">0</span> pontos</div>
                <button class="play-button" onclick="abrirJogo('memory')">🚀 Jogar Agora</button>
            </div>

            <div class="game-card">
                <div class="game-icon">🔍</div>
                <h3 class="game-title">Caça Palavras</h3>
                <p class="game-description">Encontre palavras escondidas no grid!</p>
                <div class="score-display">⭐ Melhor: <span id="wordsearch-best">0</span> pontos</div>
                <button class="play-button" onclick="abrirJogo('wordsearch')">🚀 Jogar Agora</button>
            </div>

            <div class="game-card">
                <div class="game-icon">🇺🇸</div>
                <h3 class="game-title">Quiz de Inglês</h3>
                <p class="game-description">Pratique seu inglês com perguntas divertidas!</p>
                <div class="score-display">⭐ Melhor: <span id="english-best">0</span> pontos</div>
                <button class="play-button" onclick="abrirJogo('english')">🚀 Jogar Agora</button>
            </div>

            <div class="game-card">
                <div class="game-icon">🧩</div>
                <h3 class="game-title">Quebra-Cabeça Numérico</h3>
                <p class="game-description">Organize os números em sequência!</p>
                <div class="score-display">⭐ Melhor: <span id="puzzle-best">0</span> pontos</div>
                <button class="play-button" onclick="abrirJogo('puzzle')">🚀 Jogar Agora</button>
            </div>

            <div class="game-card" style="background: linear-gradient(135deg, #667eea, #764ba2); color: white;">
                <div class="game-icon">🔬</div>
                <h3 class="game-title">Laboratório 3D</h3>
                <p class="game-description">Explore experimentos científicos em 3D!</p>
                <div class="score-display" style="background: rgba(255, 255, 255, 0.2);">⭐ Melhor: <span id="lab3d-best">0</span> pontos</div>
                <button class="play-button" style="background: linear-gradient(135deg, #48bb78, #38a169);" onclick="abrirJogo('lab3d')">🚀 Jogar Agora</button>
            </div>

            <div class="game-card" style="background: linear-gradient(135deg, #4facfe, #00f2fe); color: white;">
                <div class="game-icon">📐</div>
                <h3 class="game-title">Geometria 3D</h3>
                <p class="game-description">Aprenda formas geométricas em 3D!</p>
                <div class="score-display" style="background: rgba(255, 255, 255, 0.2);">⭐ Melhor: <span id="geometry3d-best">0</span> pontos</div>
                <button class="play-button" style="background: linear-gradient(135deg, #ff6b6b, #ee5a24);" onclick="abrirJogo('geometry3d')">🚀 Jogar Agora</button>
            </div>
        </div>
    </div>

    <div id="math-modal" class="game-modal">
        <div class="modal-content">
            <button class="close-button" onclick="fecharJogo('math')">X</button>
            <h2 class="login-title">🔢 Desafio Matemático</h2>
            
            <div class="game-interface">
                <div class="game-stats">
                    <div class="stat-item" style="background: linear-gradient(135deg, #4facfe, #00f2fe);">
                        Pontos: <span id="math-current-score">0</span>
                    </div>
                    <div class="stat-item" style="background: linear-gradient(135deg, #ff6b6b, #ee5a24);">
                        Tempo: <span id="math-time-left">30</span>s
                    </div>
                </div>

                <div id="math-question-area" class="question-area">
                    Clique em "Iniciar Jogo" para começar!
                </div>
                
                <input type="number" id="math-answer-input" class="answer-input" placeholder="Digite sua resposta e pressione ENTER">

                <div style="text-align: center;">
                    <button id="math-start-btn" class="control-btn" onclick="iniciarMathGame()">▶️ Iniciar Jogo</button>
                    <button id="math-check-btn" class="control-btn" onclick="checkMathAnswer()" style="display: none;">✅ Enviar Resposta</button>
                    <button class="control-btn secondary" onclick="fecharJogo('math')">🚪 Sair</button>
                </div>
            </div>
        </div>
    </div>
    
    <div id="default-game-modal" class="game-modal">
        <div class="modal-content">
            <button class="close-button" onclick="fecharJogo('default-game')">X</button>
            <h2 class="login-title">⚠️ Jogo em Construção</h2>
            <div class="game-interface">
                <div class="question-area" style="min-height: 150px; background: #fff3cd; color: #856404;">
                    O jogo <span id="game-name-in-modal" style="text-transform: capitalize;"></span> está sendo finalizado para você!
                    Volte em breve para jogar e ganhar mais moedas.
                </div>
                <div style="text-align: center;">
                    <button class="control-btn secondary" onclick="fecharJogo('default-game')">Entendi!</button>
                </div>
            </div>
        </div>
    </div>


    <script>
        // ==========================================================
        // 1. VARIÁVEIS GLOBAIS E ESTADO DO JOGO
        // ==========================================================

        // Variáveis de estado do usuário (simuladas)
        let user = {
            isLoggedIn: false,
            name: '',
            coins: 0,
            totalPoints: 0,
            gamesPlayed: 0,
            achievements: 0,
            streak: 0,
            plan: 'basic', // basic, premium, ultra
            gameBestScores: {
                math: 0,
                portuguese: 0,
                geography: 0,
                history: 0,
                science: 0,
                memory: 0,
                wordsearch: 0,
                english: 0,
                puzzle: 0,
                lab3d: 0,
                geometry3d: 0,
            },
            ownedItems: [], // Itens da loja
        };

        // Dados de simulação de cadastro (para testes)
        const mockUsers = {
            'aluno1': { password: '123', email: 'aluno1@escola.com', initialCoins: 100, initialPoints: 50, plan: 'premium' },
            'teste': { password: '123', email: 'teste@teste.com', initialCoins: 50, initialPoints: 0, plan: 'basic' }
        };

        // Dados do Jogo de Exemplo (Desafio Matemático)
        const mathGameData = [
            { question: "Quanto é 7 + 12?", answer: 19, points: 10 },
            { question: "Qual o resultado de 25 * 4?", answer: 100, points: 20 },
            { question: "Se 30 / 5, o resultado é?", answer: 6, points: 10 },
            { question: "Qual a raiz quadrada de 81?", answer: 9, points: 30 },
            { question: "Qual o valor de 5 * (4 + 2)?", answer: 30, points: 25 }
        ];

        let currentMathQuestionIndex = 0;
        let currentMathScore = 0;
        let mathGameInterval = null;
        let mathTimeLeft = 30;

        // ==========================================================
        // 2. FUNÇÕES DE UTILIDADE E RENDERIZAÇÃO
        // ==========================================================

        // Salva o estado atual do usuário no LocalStorage (simulação de persistência)
        function saveUserData() {
            localStorage.setItem('currentUser', JSON.stringify(user));
        }

        // Carrega o estado do usuário
        function loadUserData() {
            const savedUser = localStorage.getItem('currentUser');
            if (savedUser) {
                try {
                    const loadedUser = JSON.parse(savedUser);
                    // Mescla o objeto carregado, garantindo que novas propriedades (como novos jogos) sejam inicializadas
                    user = { ...user, ...loadedUser };
                    if (user.isLoggedIn) {
                        updateUI(user.name);
                        updateScoreSystem();
                        updateCurrencyAndPlanDisplay();
                    }
                } catch (e) {
                    console.error("Erro ao carregar dados do usuário:", e);
                    localStorage.removeItem('currentUser'); // Limpa dados corrompidos
                }
            }
        }

        // Atualiza a interface (display de nome, moedas, pontuação, etc.)
        function updateUI(userName) {
            document.getElementById('user-name').innerText = userName;
            document.getElementById('login-section').style.display = user.isLoggedIn ? 'none' : 'block';
            document.getElementById('user-section').style.display = user.isLoggedIn ? 'block' : 'none';
            document.getElementById('score-system').style.display = user.isLoggedIn ? 'block' : 'none';
            document.getElementById('currency-display').style.display = user.isLoggedIn ? 'flex' : 'none';
            document.getElementById('shop-btn').style.display = user.isLoggedIn ? 'block' : 'none';
            document.getElementById('plans-btn').style.display = user.isLoggedIn ? 'block' : 'none';
            
            // Atualiza badges do usuário
            const badgeContainer = document.getElementById('user-badges');
            badgeContainer.innerHTML = '';
            
            // Badge do Plano
            const planBadgeElement = document.getElementById('plan-badge');
            planBadgeElement.className = `plan-badge ${user.plan}`;
            planBadgeElement.style.display = user.isLoggedIn ? 'block' : 'none';
            document.getElementById('plan-name').innerText = `📦 Plano ${user.plan.charAt(0).toUpperCase() + user.plan.slice(1)}`;

            // Exemplo de outro badge (conquistas)
            if (user.achievements > 0) {
                badgeContainer.innerHTML += `<span style="background: #f6e05e; color: #333; padding: 3px 8px; border-radius: 10px; margin-right: 5px;">🏆 ${user.achievements} Conquistas</span>`;
            }

            updateScoreSystem();
            updateCurrencyAndPlanDisplay();
        }

        // Atualiza todos os displays de pontuação e moedas
        function updateScoreSystem() {
            document.getElementById('total-points').innerText = user.totalPoints;
            document.getElementById('games-played').innerText = user.gamesPlayed;
            document.getElementById('achievements').innerText = user.achievements;
            document.getElementById('streak').innerText = user.streak;
            document.getElementById('total-coins').innerText = user.coins;
            
            // Atualiza os melhores placares nos cards de jogos
            for (const game in user.gameBestScores) {
                const bestScoreElement = document.getElementById(`${game}-best`);
                if (bestScoreElement) {
                    bestScoreElement.innerText = user.gameBestScores[game];
                }
            }
        }

        // Atualiza o display flutuante de moedas
        function updateCurrencyAndPlanDisplay() {
            document.getElementById('user-coins').innerText = user.coins;
        }

        // Notificações Pop-up
        function showNotification(message, type = 'success') {
            const notification = document.createElement('div');
            notification.className = `notification ${type}`;
            notification.innerText = message;
            document.body.appendChild(notification);

            setTimeout(() => {
                notification.classList.add('show');
            }, 50);

            setTimeout(() => {
                notification.classList.remove('show');
                setTimeout(() => {
                    document.body.removeChild(notification);
                }, 300);
            }, 3000);
        }

        // Sistema de Saudações
        function updateGreeting() {
            const hour = new Date().getHours();
            let greetingText = '';
            let greetingIcon = '☀️';

            if (hour >= 5 && hour < 12) {
                greetingText = 'Bom dia!';
                greetingIcon = '☀️';
            } else if (hour >= 12 && hour < 18) {
                greetingText = 'Boa tarde!';
                greetingIcon = '🌅';
            } else {
                greetingText = 'Boa noite!';
                greetingIcon = '🌙';
            }

            document.getElementById('greeting-text').innerText = greetingText;
            document.getElementById('greeting-icon').innerText = greetingIcon;
            
            // Atualiza o relógio em tempo real
            const now = new Date();
            const timeString = now.toLocaleTimeString('pt-BR');
            document.getElementById('current-time').innerText = timeString;
        }

        // ==========================================================
        // 3. FUNÇÕES DE LOGIN/CADASTRO
        // ==========================================================

        function mostrarLogin() {
            document.getElementById('login-modal').style.display = 'flex';
            mostrarLoginForm();
        }

        function fecharLogin() {
            document.getElementById('login-modal').style.display = 'none';
        }

        function mostrarCadastro() {
            document.getElementById('login-form').style.display = 'none';
            document.getElementById('cadastro-form').style.display = 'block';
        }

        function mostrarLoginForm() {
            document.getElementById('cadastro-form').style.display = 'none';
            document.getElementById('login-form').style.display = 'block';
        }

        function fazerLogin() {
            const username = document.getElementById('login-usuario').value;
            const password = document.getElementById('login-senha').value;

            if (mockUsers[username] && mockUsers[username].password === password) {
                // Sucesso no login
                const userData = mockUsers[username];
                user.isLoggedIn = true;
                user.name = username;
                user.coins = userData.initialCoins;
                user.totalPoints = userData.initialPoints;
                user.plan = userData.plan;

                saveUserData();
                updateUI(username);
                fecharLogin();
                showNotification(`Bem-vindo de volta, ${username}!`, 'success');
            } else {
                showNotification('Usuário ou senha inválidos. Tente (teste:123) ou (aluno1:123)', 'error');
            }
        }

        function fazerCadastro() {
            const username = document.getElementById('cadastro-usuario').value;
            const password = document.getElementById('cadastro-senha').value;
            const confirmPassword = document.getElementById('cadastro-confirma').value;
            const email = document.getElementById('cadastro-email').value;

            if (!username || !password || !email) {
                showNotification('Preencha todos os campos.', 'error');
                return;
            }

            if (password !== confirmPassword) {
                showNotification('As senhas não coincidem.', 'error');
                return;
            }

            if (mockUsers[username]) {
                showNotification('Usuário já existe. Tente outro nome.', 'error');
                return;
            }

            // Simula o registro do novo usuário
            mockUsers[username] = { password: password, email: email, initialCoins: 50, initialPoints: 0, plan: 'basic' };
            
            // Loga o novo usuário
            user.isLoggedIn = true;
            user.name = username;
            user.coins = 50;
            user.totalPoints = 0;
            user.plan = 'basic';
            
            saveUserData();
            updateUI(username);
            fecharLogin();
            showNotification(`Conta criada! Bem-vindo(a), ${username}!`, 'success');
        }

        function logout() {
            user.isLoggedIn = false;
            user.name = '';
            // Reseta a sessão, mas mantém os dados (simulação)
            saveUserData();
            updateUI('');
            showNotification('Você saiu da plataforma.', 'error');
        }

        // ==========================================================
        // 4. FUNÇÕES DE JOGOS (Exemplo: Desafio Matemático)
        // ==========================================================

        function abrirJogo(gameId) {
            if (!user.isLoggedIn) {
                showNotification('Faça login para começar a jogar!', 'error');
                mostrarLogin();
                return;
            }
            
            const modal = document.getElementById(`${gameId}-modal`);
            
            if (modal) {
                modal.style.display = 'flex';
                // Lógica de inicialização do jogo
                if (gameId === 'math') {
                    iniciarMathGame();
                }
            } else {
                // Para jogos que ainda não têm modal específico, exibe o modal padrão.
                document.getElementById('game-name-in-modal').innerText = gameId.replace(/-/g, ' ');
                document.getElementById('default-game-modal').style.display = 'flex';
            }
        }

        function fecharJogo(gameId) {
            // Lida com modais específicos e o modal default
            const modal = document.getElementById(`${gameId}-modal`) || document.getElementById('default-game-modal');
            if (modal) {
                modal.style.display = 'none';
                // Para o jogo, se for o de matemática
                if (gameId === 'math' && mathGameInterval) {
                    clearInterval(mathGameInterval);
                    document.getElementById('math-check-btn').style.display = 'none';
                    document.getElementById('math-start-btn').style.display = 'block';
                }
            }
        }

        // --- Lógica do Jogo de Matemática ---

        function iniciarMathGame() {
            currentMathQuestionIndex = 0;
            currentMathScore = 0;
            mathTimeLeft = 30;
            user.gamesPlayed++;
            
            document.getElementById('math-current-score').innerText = 0;
            document.getElementById('math-time-left').innerText = mathTimeLeft;
            document.getElementById('math-answer-input').value = '';
            document.getElementById('math-answer-input').disabled = false;
            document.getElementById('math-start-btn').style.display = 'none';
            document.getElementById('math-check-btn').style.display = 'block';
            
            nextMathQuestion();
            startMathTimer();
        }

        function nextMathQuestion() {
            if (currentMathQuestionIndex >= mathGameData.length) {
                endMathGame(true); // Fim de todas as perguntas
                return;
            }
            
            const questionData = mathGameData[currentMathQuestionIndex];
            document.getElementById('math-question-area').innerText = questionData.question;
            document.getElementById('math-answer-input').value = ''; // Limpa a resposta
            document.getElementById('math-answer-input').focus(); // Foca no input para agilizar
            currentMathQuestionIndex++;
        }

        function checkMathAnswer() {
            const inputElement = document.getElementById('math-answer-input');
            const userAnswer = parseInt(inputElement.value.trim());
            
            // Volta um índice para checar a pergunta atual
            const questionData = mathGameData[currentMathQuestionIndex - 1]; 
            
            if (isNaN(userAnswer)) {
                showNotification('Digite um número!', 'error');
                return;
            }
            
            if (userAnswer === questionData.answer) {
                // Resposta Correta
                currentMathScore += questionData.points;
                user.coins += 5; // Recompensa
                showNotification(`🎉 Certo! +${questionData.points} Pontos e 5 Moedas!`, 'success');
                document.getElementById('math-current-score').innerText = currentMathScore;
                updateCurrencyAndPlanDisplay();
                nextMathQuestion();
            } else {
                // Resposta Incorreta
                endMathGame(false, `❌ Errado! A resposta era ${questionData.answer}`);
            }
        }

        function startMathTimer() {
            const timerDisplay = document.getElementById('math-time-left');
            
            if (mathGameInterval) clearInterval(mathGameInterval);

            mathGameInterval = setInterval(() => {
                mathTimeLeft--;
                timerDisplay.innerText = mathTimeLeft;
                
                if (mathTimeLeft <= 0) {
                    clearInterval(mathGameInterval);
                    endMathGame(false, "Tempo esgotado!");
                }
            }, 1000);
        }

        function endMathGame(allQuestionsAnswered, reason = "Resposta errada.") {
            clearInterval(mathGameInterval);
            document.getElementById('math-answer-input').disabled = true;
            document.getElementById('math-check-btn').style.display = 'none';
            document.getElementById('math-start-btn').style.display = 'block';
            
            let finalMessage = `Fim de Jogo! Pontuação: ${currentMathScore}`;
            if (allQuestionsAnswered) {
                finalMessage = `🏆 Parabéns! Você completou o Desafio! Pontuação final: ${currentMathScore}`;
            } else {
                finalMessage = `Game Over. ${reason}. Pontuação final: ${currentMathScore}`;
            }

            // Atualiza o display final da pergunta
            document.getElementById('math-question-area').innerText = finalMessage;
            
            // Atualiza pontuação global e melhor score
            user.totalPoints += currentMathScore;
            if (currentMathScore > user.gameBestScores.math) {
                user.gameBestScores.math = currentMathScore;
                showNotification('Novo Recorde no Desafio Matemático!', 'success');
            }
            
            saveUserData();
            updateScoreSystem();
            // A função fecharJogo foi movida para o botão "Sair" do modal.
        }

        // ==========================================================
        // 5. FUNÇÕES DA LOJA E PLANOS (Apenas notificação)
        // ==========================================================

        function abrirLoja() {
            if (!user.isLoggedIn) {
                showNotification('Faça login para acessar a Loja!', 'error');
                return;
            }
            showNotification('🛒 Abrindo Loja (Recurso em desenvolvimento)...', 'success');
        }

        function abrirPlanos() {
             if (!user.isLoggedIn) {
                showNotification('Faça login para ver os Planos!', 'error');
                return;
            }
            showNotification('⭐ Abrindo Planos (Recurso em desenvolvimento)...', 'success');
        }

        // ==========================================================
        // 6. INICIALIZAÇÃO
        // ==========================================================

        document.addEventListener('DOMContentLoaded', () => {
            // Adiciona o event listener de 'Enter' para o input do quiz de matemática
            const mathInput = document.getElementById('math-answer-input');
            if (mathInput) {
                mathInput.addEventListener('keypress', function(e) {
                    if (e.key === 'Enter') {
                        checkMathAnswer();
                    }
                });
            }

            // Carrega dados e atualiza a interface ao carregar a página
            loadUserData();
            
            // Atualiza a saudação imediatamente e a cada segundo (para o relógio)
            updateGreeting();
            setInterval(updateGreeting, 1000);
        });

        // Torna as funções acessíveis pelo escopo global (usado pelos onclick do HTML)
        window.mostrarLogin = mostrarLogin;
        window.fecharLogin = fecharLogin;
        window.mostrarCadastro = mostrarCadastro;
        window.mostrarLoginForm = mostrarLoginForm;
        window.fazerLogin = fazerLogin;
        window.fazerCadastro = fazerCadastro;
        window.logout = logout;
        window.abrirJogo = abrirJogo;
        window.fecharJogo = fecharJogo;
        window.iniciarMathGame = iniciarMathGame;
        window.checkMathAnswer = checkMathAnswer;
        window.abrirLoja = abrirLoja;
        window.abrirPlanos = abrirPlanos;
    </script>
</body>
</html>
